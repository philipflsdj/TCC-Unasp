@model Tcc_Unasp.Models.Cliente

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<script>

    $("#btnCreate").click(function () {
        var objcep = {};                   //objUser is variable through which i am passing the details filled by the user to the controller
        objcep.cep = $("#cep").val();            //fetching value from the textbox
        $.post("/Clientes/Create", { objcep: objcep }, function (data)        //data is a variable which contains the data returned from the action method
        {
            if (data != null) {
                alert("User Created");
                location.reload();       //for refreshing the page after saving
            }
            else {
                alert("Error");
            }
        });
    })

    $(document).ready(function () {

        function limpa_formulário_cep() {
            // Limpa valores do formulário de cep.
            $("#rua").val("");
            $("#bairro").val("");
            $("#cidade").val("");
            $("#uf").val("");
            $("#ibge").val("");
        }

        //Quando o campo cep perde o foco.
        $("#cep").blur(function () {

            //Nova variável "cep" somente com dígitos.
            var cep = $(this).val().replace(/\D/g, '');

            //Verifica se campo cep possui valor informado.
            if (cep != "") {

                //Expressão regular para validar o CEP.
                var validacep = /^[0-9]{8}$/;

                //Valida o formato do CEP.
                if (validacep.test(cep)) {

                    //Preenche os campos com "..." enquanto consulta webservice.
                    $("#rua").val("...");
                    $("#bairro").val("...");
                    $("#cidade").val("...");
                    $("#uf").val("...");
                    $("#ibge").val("...");

                    //Consulta o webservice viacep.com.br/
                    $.getJSON("https://viacep.com.br/ws/" + cep + "/json/?callback=?", function (dados) {

                        if (!("erro" in dados)) {
                            //Atualiza os campos com os valores da consulta.
                            $("#rua").val(dados.logradouro);
                            $("#bairro").val(dados.bairro);
                            $("#cidade").val(dados.localidade);
                            $("#uf").val(dados.uf);
                            $("#ibge").val(dados.ibge);
                        } //end if.
                        else {
                            //CEP pesquisado não foi encontrado.
                            limpa_formulário_cep();
                            alert("CEP não encontrado.");
                        }
                    });
                } //end if.
                else {
                    //cep é inválido.
                    limpa_formulário_cep();
                    alert("Formato de CEP inválido.");
                }
            } //end if.
            else {
                //cep sem valor, limpa formulário.
                limpa_formulário_cep();
            }
        });
    });
    $(document).ready(function () {
        $('.date').mask('11/11/1111');
        $('.time').mask('00:00:00');
        $('.date_time').mask('99/99/9999 00:00:00');
        $('#cep').mask('99999-999');
        $('.phone').mask('9999-9999');
        $('.phone_with_ddd').mask('(99) 9999-9999');
        $('.phone_us').mask('(999) 999-9999');
        $('.mixed').mask('AAA 000-S0S');
    });

</script>
<div class="col-lg-12">
    <div class="card mb-4">
        <div class="card-header">
            <h4 class="m-0 font-weight-bold text-primary">Criação de Clientes</h4>
        </div>
        <div class="card-body">
            <div class="form-horizontal">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    @Html.HiddenFor(model => model.IdCliente)
                    <div class="form-group">
                        <label>Nome:</label>
                        <input type="text" class="form-control" name="NomeCliente" id="NomeCliente" value="@Html.DisplayFor(model => model.NomeCliente)">
                        @Html.ValidationMessageFor(model => model.NomeCliente, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Nacionalidade:</label>
                        <input type="text" class="form-control" name="NacionalidadeCliente" id="NacionalidadeCliente" value="@Html.DisplayFor(model => model.NacionalidadeCliente)">
                        @Html.ValidationMessageFor(model => model.NacionalidadeCliente, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Estado Civil:</label>
                        <select class="form-control text-center" name="EstadoCivil" id="EstadoCivil" value="@Html.DisplayFor(model => model.EstadoCivil)">
                            <!--SOLTEIRO, CASADO, DIVORCIADO, UNIÃO ESTÁVEL, VIVÚVO, SEPARADO JUDICIALMENTE-->
                            <option value="Default">-----Selecione uma Opção-----</option>
                            <option value="SOLTEIRO">Solteiro</option>
                            <option value="CASADO">Casado</option>
                            <option value="DIVORCIADO">Divorciado</option>
                            <option value="UNIÃO ESTÁVEL">União Estável</option>
                            <option value="VIVÚVO">Viúvo</option>
                            <option value="SEPARADO JUDICIALMENTE">Separado Judicialmente</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.EstadoCivil, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Profissão:</label>
                        <input type="text" class="form-control" name="ProfissaoCliente" id="ProfissaoCliente" value="@Html.DisplayFor(model => model.ProfissaoCliente)">
                        @Html.ValidationMessageFor(model => model.ProfissaoCliente, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>RG:</label>
                        <input type="text" class="form-control" name="RGCliente" id="RGCliente" value="@Html.DisplayFor(model => model.RGCliente)">
                        @Html.ValidationMessageFor(model => model.RGCliente, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>CPF:</label>
                        <input type="text" class="form-control" name="CPFCliente" id="cpf" value="@Html.DisplayFor(model => model.CPFCliente)">
                        @Html.ValidationMessageFor(model => model.CPFCliente, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Data de Nascimento:</label>
                        <input type="text" class="form-control" name="dataNascimento" id="dataNascimento" value="@Html.DisplayFor(model => model.dataNascimento)">
                        @Html.ValidationMessageFor(model => model.dataNascimento, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Cep:</label>
                        <input name="cep" type="text" id="cep" value="@Html.DisplayFor(model => model.tblLogradouros.CEP)" class="form-control" placeholder="Digite o CEP do cliente">
                    </div>
                    <div class="form-group">
                        <label>Rua:</label>
                        <input name="rua" type="text" id="rua" class="form-control" placeholder="" value="@Html.DisplayFor(model => model.tblLogradouros.Descricao)">
                    </div>
                    <div class="form-group">
                        <label>Bairro:</label>
                        <input name="bairro" type="text" id="bairro" class="form-control" placeholder="" value="@Html.DisplayFor(model => model.tblLogradouros.CodigoBairro)">
                    </div>
                    <div class="form-group">
                        <label>Cidade:</label>
                        <input name="cidade" type="text" id="cidade" class="form-control" placeholder="" value="@Html.DisplayFor(model => model.tblLogradouros.CodigoCidade)">
                    </div>
                    <div class="form-group">
                        <label>Estado:</label>
                        <input name="uf" type="text" id="uf" class="form-control" placeholder="" value="@Html.DisplayFor(model => model.tblLogradouros.UF)">
                    </div>
                    <div class="form-group">
                        <label>Numero da casa:</label>
                        <input type="text" name="nCasa" id="nCasa" class="form-control" value="@Html.DisplayFor(model => model.nCasa)">
                        @Html.ValidationMessageFor(model => model.nCasa, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-outline-success" />
                        </div>
                    </div>
                }

            </div>
                
        </div>

</div>





  



</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
